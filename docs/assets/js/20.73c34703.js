(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{384:function(e,t,a){"use strict";a.r(t);var s=a(44),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"protocol-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#protocol-overview"}},[e._v("#")]),e._v(" Protocol Overview")]),e._v(" "),a("h2",{attrs:{id:"data-transfer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-transfer"}},[e._v("#")]),e._v(" Data Transfer")]),e._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("| Header |    Content    |\n| A | B  |C|D|E|F|G|H|I|…|\n")])])]),a("p",[e._v("All fields (header and content) are written in little-endian (a.k.a. Intel's byte order). This includes both numeric and string fields.")]),e._v(" "),a("h2",{attrs:{id:"header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[e._v("#")]),e._v(" Header")]),e._v(" "),a("p",[e._v("The only field in a packet's header is a 2-byte unsigned integer, specifying the packet's total size.")]),e._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("| Header |    Content    |\n|  Size  |               |\n| A | B  |C|D|E|F|G|H|I|…|\n")])])]),a("p",[e._v("Thus, the largest packet size is 64K (65535 bytes), with 2 bytes reserved for size. The smallest valid packet is 2 bytes long and has no real meaning (as TCP makes keep-alive redundant).")]),e._v(" "),a("h2",{attrs:{id:"content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#content"}},[e._v("#")]),e._v(" Content")]),e._v(" "),a("p",[e._v("The packet's content is what server emulators typically call 'a packet'. The content starts with a unique dynamic-size prefix identifying the type of the packet, followed by the packet's actual content.")]),e._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("| Header |      Content      |\n|  Size  | Opcode(s) |  Data |\n| A | B  |C|D|E|F|G|H|I|J|K|…|\n")])])]),a("h2",{attrs:{id:"opcodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opcodes"}},[e._v("#")]),e._v(" Opcodes")]),e._v(" "),a("p",[e._v("If we put protocol versions that predate Prelude BETA (336) aside, then each 'packet' (emulator-wise) starts with 1 to 3 opcodes, where the 1st opcode is a single byte, 2nd – two bytes and 3rd – four bytes.")]),e._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("| Header |                  Content                    |\n|  Size  | Opcode1 |  Opcode2  |    Opcode3    |  Data |\n| A | B  |    C    |  D  |  E  | F | G | H | I |J|K|L|…|\n")])])]),a("p",[e._v("All transmitted data is enciphered. There are different protocol encryption schemes for "),a("code",[e._v("login")]),e._v(" and for "),a("code",[e._v("game server")]),e._v(" communications.")])])}),[],!1,null,null,null);t.default=r.exports}}]);